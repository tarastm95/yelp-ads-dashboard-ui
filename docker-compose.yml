services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: yelp
      POSTGRES_USER: yelpadmin
      POSTGRES_PASSWORD: yelpadmin
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U yelpadmin -d yelp"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build: ./backend
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8004:8000"
    env_file:
      - .env
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_HOST=redis
    networks:
      - app-network

  frontend:
    build: ./frontend
    depends_on:
      - backend
    ports:
      - "8080:8080"
    command: npm run dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - VITE_BACKEND_URL=http://backend:8000
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
  redis_data:
