import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Button } from '@/components/ui/button';
import { Link, Save, X } from 'lucide-react';

interface LinkTrackingData {
  website?: string | null;
  menu?: string | null;
  call_to_action?: string | null;
}

interface LinkTrackingEditorProps {
  data?: LinkTrackingData;
  onSave: (data: LinkTrackingData) => void;
  onCancel: () => void;
  isLoading?: boolean;
}

const LinkTrackingEditor: React.FC<LinkTrackingEditorProps> = ({
  data,
  onSave,
  onCancel,
  isLoading = false
}) => {
  const [formData, setFormData] = useState<LinkTrackingData>({
    website: data?.website || '',
    menu: data?.menu || '',
    call_to_action: data?.call_to_action || ''
  });

  useEffect(() => {
    if (data) {
      setFormData({
        website: data.website || '',
        menu: data.menu || '',
        call_to_action: data.call_to_action || ''
      });
    }
  }, [data]);

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    // Convert empty strings to null
    const processedData = {
      website: formData.website?.trim() || null,
      menu: formData.menu?.trim() || null,
      call_to_action: formData.call_to_action?.trim() || null
    };
    
    onSave(processedData);
  };

  const validateUrl = (url: string): boolean => {
    if (!url.trim()) return true; // Empty is OK
    
    // Check if it's a full URL
    try {
      new URL(url);
      return true;
    } catch {
      // Check if it's URL parameters only (starts with utm_ or contains =)
      if (url.includes('=') && !url.includes('://')) {
        // Simple validation for parameters like "utm_source=yelp&utm_medium=cpc"
        return /^[a-zA-Z0-9_]+=.+(&[a-zA-Z0-9_]+=.+)*$/.test(url);
      }
      return false;
    }
  };

  return (
    <Card className="w-full max-w-2xl">
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Link className="w-5 h-5" />
          –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω—å
        </CardTitle>
      </CardHeader>
      <CardContent>
        <form onSubmit={handleSubmit} className="space-y-4">
          <div>
            <Label htmlFor="website">URL –≤–µ–±-—Å–∞–π—Ç—É</Label>
            <Input
              id="website"
              type="url"
              value={formData.website || ''}
              onChange={(e) => setFormData(prev => ({ ...prev, website: e.target.value }))}
              placeholder="https://mysite.com?utm_source=yelp –∞–±–æ utm_source=yelp&utm_medium=cpc"
              className={!validateUrl(formData.website || '') ? 'border-red-500' : ''}
            />
            <p className="text-xs text-gray-500 mt-1">
              –ü–æ–≤–Ω–∏–π URL –∞–±–æ —Ç—ñ–ª—å–∫–∏ UTM-–ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –¥–ª—è —Ç—Ä–µ–∫—ñ–Ω–≥—É –ø–µ—Ä–µ—Ö–æ–¥—ñ–≤ –Ω–∞ –≤–µ–±-—Å–∞–π—Ç
            </p>
          </div>

          <div>
            <Label htmlFor="menu">URL –º–µ–Ω—é</Label>
            <Input
              id="menu"
              type="url"
              value={formData.menu || ''}
              onChange={(e) => setFormData(prev => ({ ...prev, menu: e.target.value }))}
              placeholder="https://mysite.com/menu?utm_source=yelp –∞–±–æ utm_source=yelp&utm_medium=cpc"
              className={!validateUrl(formData.menu || '') ? 'border-red-500' : ''}
            />
            <p className="text-xs text-gray-500 mt-1">
              –ü–æ–≤–Ω–∏–π URL –∞–±–æ —Ç—ñ–ª—å–∫–∏ UTM-–ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –¥–ª—è —Ç—Ä–µ–∫—ñ–Ω–≥—É –ø–µ—Ä–µ—Ö–æ–¥—ñ–≤ –¥–æ –º–µ–Ω—é
            </p>
          </div>

          <div>
            <Label htmlFor="call_to_action">Call-to-Action URL</Label>
            <Input
              id="call_to_action"
              type="url"
              value={formData.call_to_action || ''}
              onChange={(e) => setFormData(prev => ({ ...prev, call_to_action: e.target.value }))}
              placeholder="https://mysite.com/contact?utm_source=yelp –∞–±–æ utm_source=yelp&utm_medium=cpc"
              className={!validateUrl(formData.call_to_action || '') ? 'border-red-500' : ''}
            />
            <p className="text-xs text-gray-500 mt-1">
              URL –¥–ª—è Call-to-Action –∫–Ω–æ–ø–∫–∏. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –∫–æ–ª–∏ AD_GOAL = WEBSITE_CLICKS
            </p>
          </div>

          <div className="bg-blue-50 p-3 rounded-lg">
            <h4 className="text-sm font-medium mb-2">üí° –Ø–∫ –ø—Ä–∞—Ü—é—î –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è:</h4>
            <ul className="text-xs text-gray-600 space-y-1">
              <li>‚Ä¢ <strong>–ü–æ—Ä–æ–∂–Ω—î –ø–æ–ª–µ:</strong> –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –∑–æ–≤–Ω—ñ—à–Ω—ñ–π URL (–±–µ–∑ —Ç—Ä–µ–∫—ñ–Ω–≥—É)</li>
              <li>‚Ä¢ <strong>–ü–æ–≤–Ω–∏–π URL:</strong> https://mysite.com/page?utm_source=yelp</li>
              <li>‚Ä¢ <strong>–¢—ñ–ª—å–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:</strong> utm_source=yelp&utm_medium=cpc (Yelp –¥–æ–¥–∞—Å—Ç—å –¥–æ —ñ—Å–Ω—É—é—á–æ–≥–æ URL)</li>
              <li>‚Ä¢ <strong>–ó–≤'—è–∑–æ–∫ –∑ AD_GOAL:</strong> —è–∫—â–æ AD_GOAL = WEBSITE_CLICKS —ñ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ call_to_action, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —Ç—Ä–µ–∫—ñ–Ω–≥-URL</li>
              <li>‚Ä¢ <strong>–í—Å—ñ –ø–æ–ª—è null:</strong> —Ñ—ñ—á–∞ –≤–≤–∞–∂–∞—î—Ç—å—Å—è –≤–∏–º–∫–Ω–µ–Ω–æ—é</li>
            </ul>
          </div>

          <div className="bg-yellow-50 p-3 rounded-lg">
            <h4 className="text-sm font-medium mb-2">üéØ –í–∞–∂–ª–∏–≤–æ –∑–Ω–∞—Ç–∏:</h4>
            <ul className="text-xs text-gray-600 space-y-1">
              <li>‚Ä¢ Link tracking –∑–∞—Å—Ç–æ—Å–æ–≤—É—î—Ç—å—Å—è –¥–æ <strong>CPC-—Ç—Ä–∞—Ñ—ñ–∫—É</strong> –∑ —Ä–µ–∫–ª–∞–º–∏ Yelp</li>
              <li>‚Ä¢ –ë–∞–∑–æ–≤—ñ URL –¥–ª—è –æ—Ä–≥–∞–Ω—ñ—á–Ω–æ–≥–æ —Ç—Ä–∞—Ñ—ñ–∫—É –∑–∞–¥–∞—é—Ç—å—Å—è —á–µ—Ä–µ–∑ Data Ingestion API</li>
              <li>‚Ä¢ –ü–æ–ª–µ <code>call_to_action</code> (–Ω–µ url) –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ CTA –∫–Ω–æ–ø–∫—É</li>
              <li>‚Ä¢ –ü—Ä–∏–∫–ª–∞–¥ "—Ç—ñ–ª—å–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏": {`{"LINK_TRACKING": {"website": "utm_source=yelp&utm_medium=cpc"}}`}</li>
            </ul>
          </div>

          <div className="flex gap-2 pt-4">
            <Button type="submit" disabled={isLoading} className="flex-1">
              {isLoading ? <div className="animate-spin mr-2">‚è≥</div> : <Save className="w-4 h-4 mr-2" />}
              –ó–±–µ—Ä–µ–≥—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
            </Button>
            <Button type="button" variant="outline" onClick={onCancel}>
              <X className="w-4 h-4 mr-2" />
              –°–∫–∞—Å—É–≤–∞—Ç–∏
            </Button>
          </div>
        </form>
      </CardContent>
    </Card>
  );
};

export default LinkTrackingEditor;