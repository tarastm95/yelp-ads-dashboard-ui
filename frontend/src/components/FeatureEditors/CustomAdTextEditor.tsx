import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';
import { FileText, Save, X, AlertTriangle, CheckCircle } from 'lucide-react';

interface CustomAdTextData {
  custom_review_id?: string | null;
  custom_text?: string | null;
}

interface CustomAdTextEditorProps {
  data?: CustomAdTextData;
  onSave: (data: CustomAdTextData) => void;
  onCancel: () => void;
  isLoading?: boolean;
}

const CustomAdTextEditor: React.FC<CustomAdTextEditorProps> = ({
  data,
  onSave,
  onCancel,
  isLoading = false
}) => {
  const [mode, setMode] = useState<'disabled' | 'custom_text' | 'review'>('disabled');
  const [customText, setCustomText] = useState('');
  const [reviewId, setReviewId] = useState('');

  useEffect(() => {
    if (data) {
      if (data.custom_text) {
        setMode('custom_text');
        setCustomText(data.custom_text);
      } else if (data.custom_review_id) {
        setMode('review');
        setReviewId(data.custom_review_id);
      } else {
        setMode('disabled');
      }
    }
  }, [data]);

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    let payload: CustomAdTextData = {
      custom_review_id: null,
      custom_text: null
    };

    if (mode === 'custom_text' && customText.trim()) {
      payload.custom_text = customText.trim();
    } else if (mode === 'review' && reviewId.trim()) {
      payload.custom_review_id = reviewId.trim();
    }

    onSave(payload);
  };

    const validateCustomText = (text: string) => {
    const errors: string[] = [];

    // –û—Å–Ω–æ–≤–Ω—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–≥—ñ–¥–Ω–æ –∑ –ø—Ä–∞–∫—Ç–∏—á–Ω–∏–º–∏ –ª—ñ–º—ñ—Ç–∞–º–∏
    if (text.length > 1500) errors.push('–ú–∞–∫—Å–∏–º—É–º ~1500 —Å–∏–º–≤–æ–ª—ñ–≤ (–ø—Ä–∞–∫—Ç–∏—á–Ω–∏–π –ª—ñ–º—ñ—Ç)');
    if (text.trim().length === 0) errors.push('–¢–µ–∫—Å—Ç –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ–º');
    
    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó —â–æ–¥–æ —Å—Ç–∏–ª—é (–Ω–µ –∂–æ—Ä—Å—Ç–∫—ñ –ø—Ä–∞–≤–∏–ª–∞ API)
    const uppercasePercent = (text.match(/[A-Z–ê-–Ø]/g) || []).length / text.length;
    if (uppercasePercent > 0.4) errors.push('–†–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ –º–µ–Ω—à–µ –≤–µ–ª–∏–∫–∏—Ö –ª—ñ—Ç–µ—Ä (‚â§40%)');
    
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –Ω–∞–¥–º—ñ—Ä–Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∑–Ω–∞–∫—ñ–≤ –æ–∫–ª–∏–∫—É
    const exclamationCount = (text.match(/!/g) || []).length;
    if (exclamationCount > 3) errors.push('–†–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ –º–µ–Ω—à–µ –∑–Ω–∞–∫—ñ–≤ –æ–∫–ª–∏–∫—É');

    return errors;
  };

  const textErrors = mode === 'custom_text' ? validateCustomText(customText) : [];
  const isTextValid = mode !== 'custom_text' || textErrors.length === 0;

  return (
    <Card className="w-full max-w-3xl">
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <FileText className="w-5 h-5" />
          –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤–ª–∞—Å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç—É —Ä–µ–∫–ª–∞–º–∏
        </CardTitle>
      </CardHeader>
      <CardContent>
        <form onSubmit={handleSubmit} className="space-y-6">
          <div>
            <Label className="text-base font-medium">–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø —Ç–µ–∫—Å—Ç—É —Ä–µ–∫–ª–∞–º–∏:</Label>
            <RadioGroup
              value={mode}
              onValueChange={(value) => setMode(value as typeof mode)}
              className="mt-4 space-y-4"
            >
              <div className="flex items-start space-x-3">
                <RadioGroupItem value="disabled" id="disabled" className="mt-1" />
                <div>
                  <label htmlFor="disabled" className="font-medium cursor-pointer">
                    –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π —Ç–µ–∫—Å—Ç Yelp
                  </label>
                  <p className="text-sm text-gray-600">
                    Yelp –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≥–µ–Ω–µ—Ä—É—î —Ç–µ–∫—Å—Ç —Ä–µ–∫–ª–∞–º–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –≤–∞—à –±—ñ–∑–Ω–µ—Å
                  </p>
                </div>
              </div>

              <div className="flex items-start space-x-3">
                <RadioGroupItem value="custom_text" id="custom_text" className="mt-1" />
                <div className="flex-1">
                  <label htmlFor="custom_text" className="font-medium cursor-pointer">
                    –í–ª–∞—Å–Ω–∏–π —Ç–µ–∫—Å—Ç
                  </label>
                  <p className="text-sm text-gray-600 mb-3">
                    –ù–∞–ø–∏—à—ñ—Ç—å –≤–ª–∞—Å–Ω–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–µ–∫–ª–∞–º–∏
                  </p>
                  
                  {mode === 'custom_text' && (
                    <div className="space-y-3">
                      <Textarea
                        value={customText}
                        onChange={(e) => setCustomText(e.target.value)}
                        placeholder="–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç —Ä–µ–∫–ª–∞–º–∏ (–¥–æ ~1500 —Å–∏–º–≤–æ–ª—ñ–≤)&#10;&#10;–ü—Ä–∏–∫–ª–∞–¥:&#10;–ù–∞–π–∫—Ä–∞—â–∞ –ø—ñ—Ü–∞ –≤ –º—ñ—Å—Ç—ñ! –°–≤—ñ–∂—ñ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏, —à–≤–∏–¥–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∞ —Ç–∞ –Ω–µ–ø–µ—Ä–µ–≤–µ—Ä—à–µ–Ω–∏–π —Å–º–∞–∫. –ó–∞–º–æ–≤–ª—è–π—Ç–µ –∑–∞—Ä–∞–∑ —ñ –æ—Ç—Ä–∏–º–∞–π—Ç–µ –∑–Ω–∏–∂–∫—É 15% –Ω–∞ –ø–µ—Ä—à—É –ø—ñ—Ü—É!"
                        rows={4}
                        className={textErrors.length > 0 ? 'border-red-500' : 'border-green-500'}
                      />
                      
                      <div className="flex justify-between text-xs">
                        <span className={customText.length > 1500 ? 'text-red-500' : 'text-gray-500'}>
                          –°–∏–º–≤–æ–ª—ñ–≤: {customText.length} / ~1500
                        </span>
                        <span className={customText.trim().length > 0 && customText.length <= 1500 ? 'text-green-500' : 'text-red-500'}>
                          {customText.trim().length > 0 && customText.length <= 1500 ? '‚úì' : '‚úó'} –î–æ–≤–∂–∏–Ω–∞
                        </span>
                      </div>

                      {textErrors.length > 0 && (
                        <div className="p-3 bg-red-50 border border-red-200 rounded-lg">
                          <div className="flex items-center gap-2 mb-2">
                            <AlertTriangle className="w-4 h-4 text-red-600" />
                            <span className="text-sm font-medium text-red-800">–ü–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó:</span>
                          </div>
                          <ul className="text-xs text-red-700 space-y-1">
                            {textErrors.map((error, index) => (
                              <li key={index}>‚Ä¢ {error}</li>
                            ))}
                          </ul>
                        </div>
                      )}

                      {textErrors.length === 0 && customText.trim().length > 0 && (
                        <div className="p-3 bg-green-50 border border-green-200 rounded-lg">
                          <div className="flex items-center gap-2">
                            <CheckCircle className="w-4 h-4 text-green-600" />
                            <span className="text-sm font-medium text-green-800">–¢–µ–∫—Å—Ç –ø—Ä–æ–π—à–æ–≤ –≤–∞–ª—ñ–¥–∞—Ü—ñ—é!</span>
                          </div>
                        </div>
                      )}
                    </div>
                  )}
                </div>
              </div>

              <div className="flex items-start space-x-3">
                <RadioGroupItem value="review" id="review" className="mt-1" />
                <div className="flex-1">
                  <label htmlFor="review" className="font-medium cursor-pointer">
                    –¢–µ–∫—Å—Ç –∑ –≤—ñ–¥–≥—É–∫—É
                  </label>
                  <p className="text-sm text-gray-600 mb-3">
                    –í–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ —Ç–µ–∫—Å—Ç –∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤—ñ–¥–≥—É–∫—É –∫–ª—ñ—î–Ω—Ç–∞
                  </p>
                  
                  {mode === 'review' && (
                    <Input
                      value={reviewId}
                      onChange={(e) => setReviewId(e.target.value)}
                      placeholder="–í–≤–µ–¥—ñ—Ç—å ID –≤—ñ–¥–≥—É–∫—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: review_abc123xyz)"
                    />
                  )}
                </div>
              </div>
            </RadioGroup>
          </div>

          <div className="bg-blue-50 p-4 rounded-lg">
            <h4 className="text-sm font-medium mb-2">üìù –ü—Ä–∞–≤–∏–ª–∞ —Ç–µ–∫—Å—Ç—É —Ä–µ–∫–ª–∞–º–∏:</h4>
            <ul className="text-xs text-gray-600 space-y-1">
              <li>‚Ä¢ <strong>–ü–æ–ª—è:</strong> –∑–∞–ø–æ–≤–Ω—é–π –∞–±–æ "–í–ª–∞—Å–Ω–∏–π —Ç–µ–∫—Å—Ç", –∞–±–æ "–¢–µ–∫—Å—Ç –∑ –≤—ñ–¥–≥—É–∫—É" (–Ω–µ –æ–±–∏–¥–≤–∞)</li>
              <li>‚Ä¢ <strong>–î–æ–≤–∂–∏–Ω–∞:</strong> —Ç—Ä–∏–º–∞–π —Ç–µ–∫—Å—Ç —Å—Ç–∏—Å–ª–∏–º; –¥–æ ~1500 —Å–∏–º–≤–æ–ª—ñ–≤ (–ø—Ä–∞–∫—Ç–∏—á–Ω–∏–π –ª—ñ–º—ñ—Ç)</li>
              <li>‚Ä¢ <strong>–°—Ç–∏–ª—å:</strong> –±–µ–∑ –Ω–∞–¥–º—ñ—Ä–Ω–∏—Ö –í–ï–†–•–ù–Ü–• –õ–Ü–¢–ï–† —Ç–∞ –∑–Ω–∞–∫—ñ–≤ –æ–∫–ª–∏–∫—É</li>
              <li>‚Ä¢ <strong>–ö–æ–Ω—Ç–µ–Ω—Ç:</strong> –Ω–µ –¥–æ–¥–∞–≤–∞–π –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ñ –¥–∞–Ω—ñ/URL —É —Ç–µ–∫—Å—Ç (–¥–ª—è –ø–æ—Å–∏–ª–∞–Ω—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π CTA)</li>
              <li>‚Ä¢ <strong>–Ø–∫—â–æ –æ–±–∏–¥–≤–∞ –ø–æ–ª—è –ø–æ—Ä–æ–∂–Ω—ñ:</strong> —Ç–µ–∫—Å—Ç –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Yelp –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ</li>
              <li>‚Ä¢ <strong>–†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ñ—Å—Ç—å:</strong> —Ç–µ–∫—Å—Ç –ø–æ–≤–∏–Ω–µ–Ω –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –≤–∞—à–æ–º—É –±—ñ–∑–Ω–µ—Å—É</li>
            </ul>
          </div>

          <div className="bg-yellow-50 p-4 rounded-lg">
            <h4 className="text-sm font-medium mb-2">üí° –ü–æ—Ä–∞–¥–∏ –¥–ª—è –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç—É:</h4>
            <ul className="text-xs text-gray-600 space-y-1">
              <li>‚Ä¢ –ü—ñ–¥–∫—Ä–µ—Å–ª—ñ—Ç—å —É–Ω—ñ–∫–∞–ª—å–Ω—ñ –ø–µ—Ä–µ–≤–∞–≥–∏ –≤–∞—à–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É</li>
              <li>‚Ä¢ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ —Ñ–∞–∫—Ç–∏ (—à–≤–∏–¥–∫—ñ—Å—Ç—å, —è–∫—ñ—Å—Ç—å, –¥–æ—Å–≤—ñ–¥)</li>
              <li>‚Ä¢ –î–æ–¥–∞–π—Ç–µ –∑–∞–∫–ª–∏–∫ –¥–æ –¥—ñ—ó (–∑–∞–º–æ–≤–ª—è–π—Ç–µ, —Ç–µ–ª–µ—Ñ–æ–Ω—É–π—Ç–µ, –≤—ñ–¥–≤—ñ–¥–∞–π—Ç–µ)</li>
              <li>‚Ä¢ –ó–≥–∞–¥–∞–π—Ç–µ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –∞–±–æ –∑–Ω–∏–∂–∫–∏</li>
              <li>‚Ä¢ –ü–∏—à—ñ—Ç—å –ø—Ä–∏—Ä–æ–¥–Ω–æ—é –º–æ–≤–æ—é, —É–Ω–∏–∫–∞–π—Ç–µ —Ä–µ–∫–ª–∞–º–Ω–∏—Ö —à—Ç–∞–º–ø—ñ–≤</li>
            </ul>
          </div>

          <div className="flex gap-2 pt-4">
            <Button 
              type="submit" 
              disabled={isLoading || !isTextValid} 
              className="flex-1"
            >
              {isLoading ? <div className="animate-spin mr-2">‚è≥</div> : <Save className="w-4 h-4 mr-2" />}
              –ó–±–µ—Ä–µ–≥—Ç–∏ —Ç–µ–∫—Å—Ç
            </Button>
            <Button type="button" variant="outline" onClick={onCancel}>
              <X className="w-4 h-4 mr-2" />
              –°–∫–∞—Å—É–≤–∞—Ç–∏
            </Button>
          </div>
        </form>
      </CardContent>
    </Card>
  );
};

export default CustomAdTextEditor;
